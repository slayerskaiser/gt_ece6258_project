% ECE 6258 Project
% Klaus Okkelberg and Mengmeng Du

function oldFrame_stabalized = stabalize(oldFrame,curFrame)
% given current and and old frames, returns old frame that has been
% transformed so its background matches that of the current

% allocate stabalized frame
[N,M] = size(oldFrame);
% oldFrame_stabalized = oldFrame;

ptsOld = detectSURFFeatures(oldFrame);
ptsCur = detectSURFFeatures(curFrame);
[featOld,ptsOld] = extractFeatures(oldFrame,ptsOld);
[featCur,ptsCur] = extractFeatures(curFrame,ptsCur);
indexPairs = matchFeatures(featOld,featCur);
ptsOld = ptsOld(indexPairs(:,1),:);
ptsCur = ptsCur(indexPairs(:,2),:);
tform = estimateGeometricTransform(ptsOld,ptsNew,'affine');
oldFrame_stabalized = imwarp(oldFrame,tform,


% imgA = rgb2gray(read(vidObj,1));
% imgB = rgb2gray(read(vidObj,2));
% ptsA = detectSURFFeatures(imgA);
% ptsB = detectSURFFeatures(imgB);
% [featuresA,ptsA] = extractFeatures(imgA,ptsA);
% [featuresB,ptsB] = extractFeatures(imgB,ptsB);
% indexPairs = matchFeatures(featuresA,featuresB);
% ptsA = ptsA(indexPairs(:,1),:);
% ptsB = ptsB(indexPairs(:,2),:);
% figure
% % showMatchedFeatures(imgA,imgB,ptsA,ptsB)
% [tform, pointsBm, pointsAm] = estimateGeometricTransform(...
%     ptsB, ptsA, 'similarity');
% imgBp = imwarp(imgB, tform, 'OutputView', imref2d(size(imgB)));
% pointsBmp = transformPointsForward(tform, pointsBm.Location);
% showMatchedFeatures(imgA, imgBp, pointsAm, pointsBmp);